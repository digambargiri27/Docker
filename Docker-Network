docker swarm vs kubernetes

In Kubernetes, an application can be deployed using a combination of pods, deployments, and services (or micro-services). 
Whereas, in Docker Swarm, applications can be deployed as services (or micro-services) in a Swarm cluster. Y
AML files can be used to specify multi-container.

Docker machine needs to be installed first.

admin@pc4 ~]$ cat swarms.sh
#!/bin/bash
docker-machine create -d virtualbox --swarm --swarm-master master-0
docker-machine ssh master-0 -t docker swarm init --advertise-addr $(docker-machine ip master-0)
declare -a worker=(worker-0 worker-1)
for((i=0;i<${#worker[@]};i++))
do
docker-machine create -d virtualbox --swarm ${worker[$i]}
docker-machine ssh "${worker[$i]}" -t $(docker-machine ssh master-0 docker swarm join-token worker|awk 'NR>2'|grep -i docker)
done
eval $(docker-machine env master-0)
[admin@pc4 ~]$ 

chmod +x swarms.sh
./swarms.sh

[admin@pc4 ~]$ docker-machine ls
NAME           ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER     ERRORS
master-0       -        virtualbox   Running   tcp://192.168.99.101:2376           v19.03.5   
testmachine1   *        virtualbox   Running   tcp://192.168.99.100:2376           v19.03.5   
worker-0       -        virtualbox   Running   tcp://192.168.99.102:2376           v19.03.5   
worker-1       -        virtualbox   Running   tcp://192.168.99.103:2376           v19.03.5   
[admin@pc4 ~]$ 

if you have something whihc is not required.
docker-machine rm -f -y testmachine1

eval $(docker-machine env master-0)
docker ps

2 types of token - master tokcend and worker token
docker swrm join-token worker
run this token on worker - 

manager network 

docker network ls
docker swarm 
docker ps
docker ps -a
docker-machine ps
docker-machine ls
docker-machine ssh master-0
docker@master-0:~$ vi /etc/docker/daemon.json
{
   "insecure-registries": ["192.168.152.127"]
}
sudo /etc/init.d/docker stop
sudo /etc/init.d/docker start

[admin@pc4 ~]$ docker-machine ssh worker-0
sudo vi /etc/docker/daemon.json
sudo /etc/init.d/docker stop                                
sudo /etc/init.d/docker start                               


docker@worker-0:~$ cat /etc/docker/daemon.json                                 
{
   "insecure-registries": ["192.168.152.127"]
}
docker-machine ssh worker-1
sudo vi /etc/docker/daemon.json
{
   "insecure-registries": ["192.168.152.127"]
}
sudo /etc/init.d/docker stop                                
sudo /etc/init.d/docker start  

docker-machine ssh worker-0
docker-machine ssh worker-1
eval $(docker-machine env master-0)
docker network create -d overlay dockerlab
docker network ls
docker login -u Student -p Student http://192.168.152.127
docker login -u Student -p Student123 http://192.168.152.127
docker run -d -p 80:80 --network dockerlab --name testhttpd 192.168.152.127/digambar/centos7-https:v4
docker info
eval $(docker-machine env  worker-0)
docker info
docker 
docker network ls
eval $(docker-machine env master-0)
docker node ls1051  docker service create --name httpd-custom --publish target=80,published=80 --mode global --with-registry-auth --constraint "node.role==worker" --network dockerlab 192.168.152.127/syedab/centos7-httpd:v4
 1052  docker service ps
 1053  docker service ls
 1054  docker ps 
 1055  docker network ls
 1056  docker |grep Name
 1057  docker info |grep Name
 1058  eval $(docker-machine env worker-0)1051  docker service create --name httpd-custom --publish target=80,published=80 --mode global --with-registry-auth --constraint "node.role==worker" --network dockerlab 192.168.152.127/syedab/centos7-httpd:v4
 1052  docker service ps
 1053  docker service ls
 1054  docker ps 
 1055  docker network ls
 1056  docker |grep Name
 1057  docker info |grep Name
 1058  eval $(docker-machine env worker-0)
 1059  docker info |grep Name
 1060  docker network ls
 1061  docker images
 1062  docker-amchine ls
 1063  docker-machine ls
 1059  docker info |grep Name
 1060  docker network ls
 1061  docker images
 1062  docker-amchine ls
 1063  docker-machine ls



docker service create --name httpd-custom --publish target=80,published=80 --network dockerlab 192.168.152.127/digambar/centos7-https:v4

docker service create --name httpd-custom --publish target=80,published=80 --constraint "node.role==worker" --network dockerlab 192.168.152.127/digambar/centos07-https:v4


1051  docker service create --name httpd-custom --publish target=80,published=80 --mode global --with-registry-auth --constraint "node.role==worker" --network dockerlab 192.168.152.127/syedab/centos7-httpd:v4
 1052  docker service ps
 1053  docker service ls
 1054  docker ps 
 1055  docker network ls
 1056  docker |grep Name
 1057  docker info |grep Name
 1058  eval $(docker-machine env worker-0)
 1059  docker info |grep Name
 1060  docker network ls
 1061  docker images
 1062  docker-amchine ls
 1063  docker-machine ls
